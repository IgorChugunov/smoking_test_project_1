{"name": "test_buy_product_1", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF61DBE80D5+2992373]\n\t(No symbol) [0x00007FF61D87BFD0]\n\t(No symbol) [0x00007FF61D71590A]\n\t(No symbol) [0x00007FF61D76926E]\n\t(No symbol) [0x00007FF61D76955C]\n\t(No symbol) [0x00007FF61D7B27D7]\n\t(No symbol) [0x00007FF61D78F3AF]\n\t(No symbol) [0x00007FF61D7AF584]\n\t(No symbol) [0x00007FF61D78F113]\n\t(No symbol) [0x00007FF61D75A918]\n\t(No symbol) [0x00007FF61D75BA81]\n\tGetHandleVerifier [0x00007FF61DC46A2D+3379789]\n\tGetHandleVerifier [0x00007FF61DC5C32D+3468109]\n\tGetHandleVerifier [0x00007FF61DC50043+3418211]\n\tGetHandleVerifier [0x00007FF61D9DC78B+847787]\n\t(No symbol) [0x00007FF61D88757F]\n\t(No symbol) [0x00007FF61D882FC4]\n\t(No symbol) [0x00007FF61D88315D]\n\t(No symbol) [0x00007FF61D872979]\n\tBaseThreadInitThunk [0x00007FFAF83C7374+20]\n\tRtlUserThreadStart [0x00007FFAF86DCC91+33]", "trace": "@allure.description(\"Test buy product 1\")\n    def test_buy_product_1():\n        option = Options()\n        option.add_experimental_option('excludeSwitches', ['enable-logging'])\n        driver = webdriver.Chrome()\n        print('Start_test')\n    \n        login = Login_page(driver)\n        login.authorization()\n    \n        mp = Main_page(driver)\n>       mp.select_products_1()\n\ntests\\test_buy_product.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage\\main_page.py:74: in select_products_1\n    self.click_select_product_1()\npage\\main_page.py:49: in click_select_product_1\n    self.get_product_1().click()\npage\\main_page.py:29: in get_product_1\n    return WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.select_product_1)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"75379df273a077953b1137bc69bbbb58\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001C24A767C40>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF61DBE80D5+2992373]\nE       \t(No symbol) [0x00007FF61D87BFD0]\nE       \t(No symbol) [0x00007FF61D71590A]\nE       \t(No symbol) [0x00007FF61D76926E]\nE       \t(No symbol) [0x00007FF61D76955C]\nE       \t(No symbol) [0x00007FF61D7B27D7]\nE       \t(No symbol) [0x00007FF61D78F3AF]\nE       \t(No symbol) [0x00007FF61D7AF584]\nE       \t(No symbol) [0x00007FF61D78F113]\nE       \t(No symbol) [0x00007FF61D75A918]\nE       \t(No symbol) [0x00007FF61D75BA81]\nE       \tGetHandleVerifier [0x00007FF61DC46A2D+3379789]\nE       \tGetHandleVerifier [0x00007FF61DC5C32D+3468109]\nE       \tGetHandleVerifier [0x00007FF61DC50043+3418211]\nE       \tGetHandleVerifier [0x00007FF61D9DC78B+847787]\nE       \t(No symbol) [0x00007FF61D88757F]\nE       \t(No symbol) [0x00007FF61D882FC4]\nE       \t(No symbol) [0x00007FF61D88315D]\nE       \t(No symbol) [0x00007FF61D872979]\nE       \tBaseThreadInitThunk [0x00007FFAF83C7374+20]\nE       \tRtlUserThreadStart [0x00007FFAF86DCC91+33]\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "description": "Test buy product 1", "steps": [{"name": "Authorization", "status": "passed", "start": 1736525224278, "stop": 1736525225756}], "attachments": [{"name": "stdout", "source": "28414b88-62ba-44ea-8906-562bbc928ff0-attachment.txt", "type": "text/plain"}], "start": 1736525222789, "stop": 1736525236130, "uuid": "051388f7-ecc5-4fac-b116-44aaa16b7840", "historyId": "921e569ef0e667b7ca50b3357f391e4e", "testCaseId": "921e569ef0e667b7ca50b3357f391e4e", "fullName": "tests.test_buy_product#test_buy_product_1", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_buy_product"}, {"name": "host", "value": "DESKTOP-CBU3IUO"}, {"name": "thread", "value": "16944-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_buy_product"}]}